<?php

// ORCIDs

//----------------------------------------------------------------------------------------
function get($url, $format = '')
{
	
	$ch = curl_init();
	curl_setopt($ch, CURLOPT_URL, $url);
	curl_setopt($ch, CURLOPT_HEADER, 0);
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
	curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);
	
	if ($format != '')
	{
		curl_setopt($ch, CURLOPT_HTTPHEADER, array("Accept: " . $format));	
	}
	
	$response = curl_exec($ch);
	if($response == FALSE) 
	{
		$errorText = curl_error($ch);
		curl_close($ch);
		die($errorText);
	}
	
	$info = curl_getinfo($ch);
	$http_code = $info['http_code'];
	
	switch ($info['http_code'])
	{
		case 404:
			echo "$url Not found\n";
			exit();
			break;
			
		case 429:
			echo "Blocked\n";
			exit();
			break;
	
		default:
			break;
	}	
	
	curl_close($ch);
	
	return $response;
}

$orcids = array(
"0000-0002-1323-2826",
"0000-0001-7034-8772",
"0000-0001-9878-9051",
"0000-0002-8497-8908",
"0000-0002-3586-8323",
"0000-0003-1036-7028",
"0000-0002-3404-5253",
"0000-0002-3717-4800",
"0000-0002-3543-6504",
"0000-0002-6628-1816",
"0000-0002-8304-3131",
"0000-0003-1166-610X",
"0000-0002-8753-0113",
"0000-0002-5293-1304",
"0000-0001-6029-183X",
"0000-0003-4685-5322",
"0000-0001-8735-8723",
"0000-0001-7215-9617",
"0000-0003-2782-9671",
"0000-0002-9219-7001",
"0000-0001-6484-1210",
"0000-0002-7863-4965",
"0000-0003-1093-677X",
"0000-0001-6515-6186",
"0000-0002-8757-7915",
"0000-0003-3641-8321",
"0000-0002-5762-0513",
"0000-0003-0675-4762",
"0000-0001-6719-1612",
"0000-0001-9324-5899",
"0000-0002-0123-8833",
"0000-0001-6611-8640",
"0000-0001-7157-8131",
"0000-0003-1726-999X",
"0000-0003-1661-0543",
"0000-0003-3414-5155",
"0000-0001-6071-8194",
"0000-0001-6877-3649",
"0000-0002-9307-3705",
"0000-0002-6771-4038",
"0000-0002-6543-8367",
"0000-0002-5378-3008",
"0000-0003-3474-5505",
"0000-0003-0826-3000",
"0000-0002-3175-2649",
"0000-0002-2628-5652",
"0000-0003-4839-6684",
"0000-0001-8052-1671",
"0000-0003-3958-9919",
"0000-0001-8675-0520",
"0000-0002-8619-7988",
"0000-0003-3267-8855",
"0000-0003-4162-0575",
"0000-0002-1725-8863",
"0000-0002-3738-4162",
"0000-0002-4975-2794",
"0000-0002-6232-4065",
"0000-0003-0863-7244",
"0000-0003-2698-3757",
"0000-0003-4005-281X",
"0000-0002-3312-8022",
"0000-0003-1675-4635",
"0000-0002-0289-3303",
"0000-0002-0488-4830",
"0000-0001-8949-3726",
"0000-0001-7076-7643",
"0000-0002-2652-1360",
"0000-0003-4289-4754",
"0000-0002-5416-6933",
"0000-0001-6270-0983",
"0000-0001-8484-9279",
"0000-0002-8243-0156",
"0000-0002-5765-4596",
"0000-0002-4613-7761",
"0000-0002-8505-3050",
"0000-0002-8861-1070",
"0000-0002-4915-8349",
"0000-0002-1897-6621",
"0000-0003-0612-2458",
"0000-0002-8193-2736",
"0000-0002-3324-6555",
"0000-0001-7173-2709",
"0000-0002-4396-2598",
"0000-0001-6372-7926",
"0000-0003-0480-085X",
"0000-0002-8859-2105",
"0000-0001-7828-8698",
"0000-0003-1076-9959",
"0000-0003-3655-2678",
"0000-0002-1903-4126",
"0000-0003-4594-792X",
"0000-0002-9873-3186",
"0000-0002-0676-9190",
"0000-0002-9900-4276",
"0000-0002-0652-2411",
"0000-0001-9577-0291",
"0000-0002-0448-0270",
"0000-0003-3981-2615",
"0000-0002-3650-4783",
"0000-0001-6523-3030",
"0000-0002-7951-4148",
"0000-0003-0747-0817",
"0000-0002-6601-0880",
"0000-0001-5952-4923",
"0000-0002-5394-0114",
"0000-0002-7187-1968",
"0000-0002-4891-3859",
"0000-0002-8939-3773",
"0000-0002-6132-2738",
"0000-0001-6457-1505",
"0000-0002-4730-3805",
"0000-0003-3903-8260",
"0000-0003-4129-7122",
"0000-0002-9252-1596",
"0000-0001-7971-1216",
"0000-0001-6300-9350",
"0000-0003-1057-1029",
"0000-0003-3720-2856",
"0000-0002-6853-0134",
"0000-0001-9504-4601",
"0000-0002-7407-0402",
"0000-0001-7763-902X",
"0000-0002-8789-3061",
"0000-0002-9397-4001",
"0000-0001-8666-1931",
"0000-0003-0098-978X",
"0000-0002-4210-2959",
"0000-0003-2524-1794",
"0000-0002-3533-5287",
"0000-0002-4257-741X",
"0000-0001-5014-1600",
"0000-0002-7363-1853",
"0000-0002-9870-1926",
"0000-0002-7679-2548",
"0000-0001-9245-6512",
"0000-0002-9985-3630",
"0000-0001-7035-8276",
"0000-0001-6704-898X",
"0000-0002-2260-226X",
"0000-0001-9739-6512",
"0000-0001-8385-1166",
"0000-0003-3878-1845",
"0000-0003-4360-8027",
"0000-0002-9483-5695",
"0000-0001-6764-7376",
"0000-0002-2949-4871",
"0000-0001-5403-8037",
"0000-0002-4599-6724",
"0000-0002-8742-7319",
"0000-0002-6726-9536",
"0000-0003-0805-9683",
"0000-0003-1303-7227",
"0000-0001-9031-2785",
"0000-0001-9899-1970",
"0000-0002-3651-5108",
"0000-0002-0735-7227",
"0000-0001-7242-1208",
"0000-0003-2382-0872",
"0000-0002-6274-4959",
"0000-0002-2849-6912",
"0000-0001-6381-6339",
"0000-0002-1810-9886",
"0000-0003-4835-2497",
"0000-0003-3303-7056",
"0000-0002-5971-4759",
"0000-0003-0514-142X",
"0000-0003-0910-2583",
"0000-0001-7054-129X",
"0000-0003-4023-8921",
"0000-0003-0526-872X",
"0000-0003-0468-9290",
"0000-0003-0643-8620",
"0000-0001-6209-6800",
"0000-0002-7778-1963",
"0000-0001-9939-7615",
"0000-0002-7391-8408",
"0000-0002-2366-1771",
"0000-0002-3410-6669",
"0000-0003-0158-2455",
"0000-0002-8788-7542",
"0000-0002-5154-154X",
"0000-0001-9645-4397",
"0000-0003-2765-7611",
"0000-0002-2497-3064",
"0000-0001-7534-5669",
"0000-0003-4398-4380",
"0000-0002-6362-9354",
"0000-0001-7079-6129",
"0000-0003-0106-2660",
"0000-0002-3804-2690",
"0000-0003-3974-4309",
"0000-0002-0464-9259",
"0000-0001-8929-6300",
"0000-0003-3518-7277",
"0000-0002-3114-1469",
"0000-0003-2956-3256",
"0000-0002-5491-6837",
"0000-0001-5384-7529",
"0000-0003-4033-9933",
"0000-0002-4701-1079",
"0000-0003-0502-0150",
"0000-0002-3409-9673",
"0000-0002-0068-8146",
"0000-0002-9568-1245",
"0000-0002-6355-3441",
"0000-0003-3000-1242",
"0000-0003-3664-3924",
"0000-0001-7162-9023",
"0000-0001-8230-518X",
"0000-0003-1838-464X",
"0000-0001-7110-6740",
"0000-0002-5254-3387",
"0000-0003-2836-0852",
"0000-0001-5452-4553",
"0000-0002-8590-2972",
"0000-0002-9904-4964",
"0000-0003-3164-109X",
"0000-0003-4888-8371",
"0000-0002-0014-3728",
"0000-0002-6108-1639",
"0000-0002-6325-6957",
"0000-0001-7080-706X",
"0000-0002-2198-3515",
"0000-0002-8787-9980",
"0000-0002-7502-4889",
"0000-0002-7530-4856",
"0000-0001-6055-5380",
"0000-0002-6739-2390",
"0000-0002-5827-7462",
"0000-0001-9868-4807",
"0000-0002-0934-1763",
"0000-0002-3031-7557",
"0000-0002-4978-4729",
"0000-0002-6791-4689",
"0000-0003-2044-4533",
"0000-0001-5409-4231",
"0000-0001-8936-0536",
"0000-0001-9940-8441",
"0000-0003-3224-1987",
"0000-0002-8923-6081",
"0000-0002-6253-3078",
"0000-0002-5640-4536",
"0000-0002-1375-7972",
"0000-0002-7576-2283",
"0000-0001-7987-5800",
"0000-0001-9943-8843",
"0000-0003-2638-4068",
"0000-0003-0100-7100",
);

$count = 1;

foreach ($orcids as $orcid)
{
	$url = 'https://orcid.org/' . $orcid;
	$json = get($url, 'application/ld+json');
	
	$obj = json_decode($json);
	
	//print_r($obj);
	
	$kv = array();
	
	if (isset($obj->givenName))
	{
		$kv[] = array('givenName', $obj->givenName);
	}

	if (isset($obj->familyName))
	{
		$kv[] = array('familyName', $obj->familyName);
	}
	
	if (isset($obj->address))
	{
		if (is_object($obj->address))
		{
			$address = $obj->address;
			if (isset($address->addressCountry))
			{
				$kv[] = array('addressCountry', $address->addressCountry);
			}
		}
		
		if (is_array($obj->address))
		{
			foreach ($obj->address as $address)
			{
				if (isset($address->addressCountry))
				{
					$kv[] = array('addressCountry', $address->addressCountry);
				}			
			}
		}
		
	}
	
	/*
	if (isset($obj->{'@reverse'}))
	{
		foreach ($obj->{'@reverse'}->creator as $work)
		{
			if (isset($work->{'@id'}))
			{
				if (preg_match('/https?:\/\/doi.org\/(.*)/', $work->{'@id'}, $m))
				{
					$kv[] = array('addressCountry', $address->addressCountry);
				}
			}
		}
	}
	*/
	
	
	//print_r($kv);
	
	foreach ($kv as $pair)
	{
		$keys = array('id', 'k', 'v');
		$values = array('"' . $orcid . '"', '"' . $pair[0] . '"', '"' . $pair[1] . '"');
	
		echo 'INSERT OR IGNORE INTO kv(' . join(",", $keys) . ') VALUES (' . join(",", $values) . ');' . "\n";
	
	}	

	// Give server a break every 10 items
	if (($count++ % 5) == 0)
	{
		$rand = rand(1000000, 3000000);
		echo "\n-- ...sleeping for " . round(($rand / 1000000),2) . ' seconds' . "\n\n";
		usleep($rand);
	}
	
}

?>

